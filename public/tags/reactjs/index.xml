<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ReactJS on limistah</title>
    <link>https://limistah.dev/tags/reactjs/</link>
    <description>Recent content in ReactJS on limistah</description>
    <image>
      <title>limistah</title>
      <url>https://limistah.dev/images/papermod-cover.png</url>
      <link>https://limistah.dev/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 Jan 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://limistah.dev/tags/reactjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ReactJS - Unexpected closing tag</title>
      <link>https://limistah.dev/posts/react-unexpected-closing-tag/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://limistah.dev/posts/react-unexpected-closing-tag/</guid>
      <description>Beginners in ReactJS often face this kind of error: It is not just with inputs, it is with all HTML elements that does not expect a closing tags, they are called empty elements. A list of these tags could be found here.
To solve this very easily, we just have to follow the HTML semantics by ending all empty elements with /&amp;gt; instead of &amp;gt;
So inputs should look like this:</description>
    </item>
    <item>
      <title>ReactJS - Inplace Edit component</title>
      <link>https://limistah.dev/posts/reactjs-inplace-edit-component/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://limistah.dev/posts/reactjs-inplace-edit-component/</guid>
      <description>Last time, I was trying to render a data table and I thought that I should make some fields editable right in the table listing. It is interesting to note that I never thought about any NPM library for it, so I went all out to create a simple but effective solution for myself.
In this post, I will demonstrate how I created an editable component. The component would be able to use different form fields and notify the parent if any change has been made.</description>
    </item>
  </channel>
</rss>
